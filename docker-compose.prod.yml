version: '3.8'

services:
  # Nginx reverse proxy for SSL termination and routing
  nginx:
    image: nginx:alpine
    container_name: ${CLIENT_NAME:-client}-nginx
    ports:
      - "${NGINX_HTTP_PORT:-80}:80"
      - "${NGINX_HTTPS_PORT:-443}:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    environment:
      - CLIENT_DOMAIN=${CLIENT_DOMAIN:-localhost}
      - API_UPSTREAM=${API_UPSTREAM:-api:8000}
    depends_on:
      - api
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - basecamp-network

  # Ollama LLM service (production optimized)
  ollama:
    image: ollama/ollama:latest
    container_name: ${CLIENT_NAME:-client}-ollama
    # No exposed ports - internal network only
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_ORIGINS=http://api:8000,https://${CLIENT_DOMAIN:-localhost}
      - OLLAMA_NUM_PARALLEL=2
      - OLLAMA_MAX_LOADED_MODELS=2
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2.0'
        reservations:
          memory: 2G
          cpus: '1.0'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/version"]
      interval: 60s
      timeout: 15s
      retries: 5
      start_period: 120s
    networks:
      - basecamp-network

  # FastAPI application (production optimized)
  api:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: ${CLIENT_NAME:-client}-api
    # No exposed ports - accessed through nginx
    volumes:
      - chroma_data:/app/chroma_db
      - logs_data:/app/logs
    environment:
      # API Configuration (Production)
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - DEBUG=false
      - ENVIRONMENT=production
      
      # Client Configuration
      - CLIENT_NAME=${CLIENT_NAME:-client}
      - CLIENT_DOMAIN=${CLIENT_DOMAIN:-localhost}
      - BUSINESS_TYPE=${BUSINESS_TYPE:-general}
      
      # LLM Configuration
      - OLLAMA_BASE_URL=http://ollama:11434
      - OLLAMA_MODEL=${OLLAMA_MODEL:-mistral:latest}
      - OLLAMA_TIMEOUT=${OLLAMA_TIMEOUT:-45}
      - OLLAMA_RETRIES=3
      
      # Vector Database (Production)
      - CHROMA_PERSIST_DIRECTORY=/app/chroma_db
      - CHROMA_COLLECTION_NAME=${CLIENT_NAME:-client}_leads
      - CHROMA_BATCH_SIZE=100
      
      # Lead Processing (Optimized)
      - LEAD_SIMILARITY_THRESHOLD=${SIMILARITY_THRESHOLD:-0.7}
      - MAX_SIMILAR_LEADS=${MAX_SIMILAR_LEADS:-10}
      - ENABLE_CONTACT_EXCLUSION=true
      
      # Rate Limiting (Production)
      - RATE_LIMIT_REQUESTS_PER_MINUTE=${RATE_LIMIT_PER_MINUTE:-30}
      - RATE_LIMIT_REQUESTS_PER_HOUR=${RATE_LIMIT_PER_HOUR:-500}
      - RATE_LIMIT_BURST_SIZE=${RATE_LIMIT_BURST:-10}
      
      # Logging (Production)
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - LOG_FORMAT=json
      - LOG_FILE=/app/logs/basecamp.log
      - LOG_ROTATION_SIZE=100MB
      - LOG_RETENTION_DAYS=30
      
      # Security (Production)
      - CORS_ORIGINS=["https://${CLIENT_DOMAIN:-localhost}"]
      - ALLOWED_HOSTS=["${CLIENT_DOMAIN:-localhost}", "api"]
      - SECURE_COOKIES=true
      - HSTS_MAX_AGE=31536000
      
      # Background Processing (Production)
      - ENABLE_BACKGROUND_TASKS=true
      - BACKGROUND_TASK_TIMEOUT=${BG_TASK_TIMEOUT:-600}
      - BACKGROUND_WORKER_COUNT=${BG_WORKERS:-2}
      
      # Performance Tuning
      - UVICORN_WORKERS=${UVICORN_WORKERS:-2}
      - UVICORN_WORKER_CLASS=uvicorn.workers.UvicornWorker
      - MAX_CONNECTIONS=${MAX_CONNECTIONS:-1000}
      - KEEPALIVE_TIMEOUT=${KEEPALIVE_TIMEOUT:-65}
      
      # Monitoring & Health
      - ENABLE_METRICS=true
      - METRICS_PATH=/metrics
      - HEALTH_CHECK_TIMEOUT=10
    env_file:
      - .env.production
    depends_on:
      ollama:
        condition: service_healthy
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.5'
        reservations:
          memory: 512M
          cpus: '0.5'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 60s
    networks:
      - basecamp-network

  # Log aggregator (optional for multi-client monitoring)
  # fluentd:
  #   image: fluent/fluentd:v1.16-debian-1
  #   container_name: ${CLIENT_NAME:-client}-fluentd
  #   volumes:
  #     - ./fluentd/conf:/fluentd/etc
  #     - logs_data:/var/log/basecamp
  #   ports:
  #     - "24224:24224"
  #   restart: unless-stopped
  #   networks:
  #     - basecamp-network

  # Redis cache (optional performance enhancement)
  redis:
    image: redis:7-alpine
    container_name: ${CLIENT_NAME:-client}-redis
    # No exposed ports - internal network only
    volumes:
      - redis_data:/data
    command: redis-server --save 300 1 --loglevel warning --maxmemory 256mb --maxmemory-policy allkeys-lru
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 128M
          cpus: '0.1'
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - basecamp-network

volumes:
  ollama_data:
    driver: local
    name: ${CLIENT_NAME:-client}_ollama_data
  chroma_data:
    driver: local
    name: ${CLIENT_NAME:-client}_chroma_data
  logs_data:
    driver: local
    name: ${CLIENT_NAME:-client}_logs_data
  redis_data:
    driver: local
    name: ${CLIENT_NAME:-client}_redis_data
  nginx_logs:
    driver: local
    name: ${CLIENT_NAME:-client}_nginx_logs

networks:
  basecamp-network:
    name: ${CLIENT_NAME:-client}-network
    driver: bridge